name: build plugin

on:
  workflow_dispatch:
    inputs:
      GIT_REPO_FULL_NAME:
        description: Select RepoName
        required: false
        type: choice
        options:
          - data2evidence/d2e-flows
      GIT_BRANCH_NAME:
        default: develop
        description: Enter BranchName / ReleaseTagName
        required: true
        type: string
      tag:
        description: Enter tag for release
        required: true
        type: string
      release:
          description: Enter name for github release
          required: true
          type: string
      prerelease:
        type: boolean
        default: true
        required: true
      overwrite:
        type: boolean
        default: true
        required: true
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches:
      - develop

env:
  GIT_BRANCH_NAME: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }} # workflow_dispatch || pull_request || push
  GIT_REPO_FULL_NAME: ${{ github.event.inputs.GIT_REPO_FULL_NAME || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }} # workflow_dispatch || pull_request || push

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - PKGPATH: ./flows/base/
          - PKGPATH: ./flows/nlp/
          - PKGPATH: ./flows/cohort_survival/
          - PKGPATH: ./flows/data_mapping/
          - PKGPATH: ./flows/white_rabbit/

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_BRANCH_NAME }}
          repository: ${{ env.GIT_REPO_FULL_NAME }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://pkgs.dev.azure.com/data2evidence/d2e/_packaging/d2e/npm/registry/ '
          scope: '@data2evidence'
      - name: Update version
        run: |
          cd ${{ matrix.PKGPATH }}
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            RELEASE_VERSION=${{ github.event.inputs.tag }}
            jq --arg v $RELEASE_VERSION '.version=$v' package.json > tmppkg; mv tmppkg package.json
          else
            jq --arg v "-$(date +%s)-$GITHUB_SHA" '.version+=$v' package.json > tmppkg; mv tmppkg package.json
          fi
      - name: Publish
        env:
          SHOULD_PUBLISH: ${{ github.ref_name == 'develop' || github.event_name == 'workflow_dispatch' }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
           cd ${{ matrix.PKGPATH }}
           if [[ $SHOULD_PUBLISH == true ]]; then 
              npm publish
           else 
              npm publish --dry-run
           fi
